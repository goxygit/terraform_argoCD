apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  namespace: {{ .Values.elasticsearch.namespace }}
  labels:
    app: elasticsearch
spec:
  replicas: {{ .Values.elasticsearch.replicaCount }}
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:{{ .Values.elasticsearch.imageTag }}
          ports:
            - containerPort: 9200
            - containerPort: 9300
          env:
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.security.http.ssl.enabled
              value: "true"
            - name: xpack.security.http.ssl.key
              value: "/usr/share/elasticsearch/config/certs/tls.key"
            - name: xpack.security.http.ssl.certificate
              value: "/usr/share/elasticsearch/config/certs/tls.crt"
            - name: xpack.security.http.ssl.certificate_authorities
              value: "/usr/share/elasticsearch/config/certs/ca.crt"
            # Использование секрета с логином и паролем
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-credentials
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-credentials
                  key: password
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
            - name: elasticsearch-certs
              mountPath: /usr/share/elasticsearch/config/certs
              readOnly: true
      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: elasticsearch-master-certs
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ .Values.kibana.namespace }}
  labels:
    app: kibana
spec:
  replicas: {{ .Values.kibana.replicaCount }}
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:{{ .Values.kibana.imageTag }}
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: https://elasticsearch-master.{{ .Values.elasticsearch.namespace }}.svc.cluster.local:9200
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-credentials
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-credentials
                  key: password
            - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
              value: /usr/share/kibana/config/certs/ca.crt
          volumeMounts:
            - name: elasticsearch-certs
              mountPath: /usr/share/kibana/config/certs
              readOnly: true
      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: elasticsearch-master-certs
