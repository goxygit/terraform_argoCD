{
  "version": 4,
  "terraform_version": "1.10.0",
  "serial": 18,
  "lineage": "ec9d239f-d837-7832-8248-61eaae986817",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.7.5",
                "chart": "argo-cd",
                "first_deployed": 1733750505,
                "last_deployed": 1733750505,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "\nDEPRECATED option server.extraArgs.\"--insecure\" - Use configs.params.server.insecure\n\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"applicationSet\":{\"enabled\":true},\"controller\":{\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}}},\"redis\":{\"enabled\":true,\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"128Mi\"}}},\"repo-server\":{\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}}},\"repository.credentials\":[{\"secretName\":\"github-secret\",\"url\":\"https://github.com/goxygit/terraform_argoCD.git\"}],\"server\":{\"extraArgs\":[\"--insecure\"],\"service\":{\"port\":8080,\"type\":\"ClusterIP\"}}}",
                "version": "5.36.3"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "server:\r\n  service:\r\n    type: ClusterIP\r\n    port: 8080\r\n  extraArgs:\r\n    - \"--insecure\"\r\n\r\ncontroller:\r\n  resources:\r\n    limits:\r\n      cpu: 200m\r\n      memory: 512Mi\r\n    requests:\r\n      cpu: 100m\r\n      memory: 256Mi\r\n\r\nrepo-server:\r\n  resources:\r\n    limits:\r\n      cpu: 500m\r\n      memory: 1Gi\r\n    requests:\r\n      cpu: 250m\r\n      memory: 512Mi\r\n\r\napplicationSet:\r\n  enabled: true\r\n\r\nredis:\r\n  enabled: true\r\n  resources:\r\n    limits:\r\n      cpu: 100m\r\n      memory: 256Mi\r\n    requests:\r\n      cpu: 50m\r\n      memory: 128Mi\r\n\r\nrepository.credentials:\r\n  - url: \"https://github.com/goxygit/terraform_argoCD.git\"\r\n    secretName: \"github-secret\" # Имя Kubernetes Secret\r\n"
            ],
            "verify": false,
            "version": "5.36.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.16.1",
                "chart": "cert-manager",
                "first_deployed": 1733649975,
                "last_deployed": 1733649975,
                "name": "cert-manager",
                "namespace": "cert-manager",
                "notes": "\n⚠️  WARNING: `installCRDs` is deprecated, use `crds.enabled` instead.\ncert-manager v1.16.1 has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://cert-manager.io/docs/configuration/\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://cert-manager.io/docs/usage/ingress/\n",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.16.1"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "v1.16.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "gha-runner-scale-set-controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gha-runner-scale-set-controller",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "gha-runner-scale-set-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.9.3",
                "chart": "gha-runner-scale-set-controller",
                "first_deployed": 1733650170,
                "last_deployed": 1733650170,
                "name": "gha-runner-scale-set-controller",
                "namespace": "actions-runner-system",
                "notes": "Thank you for installing gha-runner-scale-set-controller.\n\nYour release is named gha-runner-scale-set-controller.\n\nWARNING: Older version of the listener (githubrunnerscalesetlistener) is deprecated and will be removed in the future gha-runner-scale-set-0.10.0 release. If you are using environment variable override to force the old listener, please remove the environment variable and use the new listener (ghalistener) instead.\n",
                "revision": 1,
                "values": "{}",
                "version": "0.9.3"
              }
            ],
            "name": "gha-runner-scale-set-controller",
            "namespace": "actions-runner-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://ghcr.io/actions/actions-runner-controller-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "0.9.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "gha-runner-scale-set-dind",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gha-runner-scale-set",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "gha-runner-scale-set-dind",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.9.3",
                "chart": "gha-runner-scale-set",
                "first_deployed": 1733650213,
                "last_deployed": 1733650366,
                "name": "gha-runner-scale-set-dind",
                "namespace": "actions-runner-system",
                "notes": "Thank you for installing gha-runner-scale-set.\n\nYour release is named gha-runner-scale-set-dind.",
                "revision": 2,
                "values": "{\"containerMode\":{\"type\":\"dind\"},\"githubConfigSecret\":\"github-secret\",\"githubConfigUrl\":\"https://github.com/goxygit/kurwa.git\",\"minRunners\":0,\"runnerScaleSetName\":\"local-runner\",\"template\":{\"spec\":{\"containers\":[{\"command\":[\"/home/runner/run.sh\"],\"env\":[{\"name\":\"RUNNER_EKS\",\"value\":\"true\"}],\"image\":\"ghcr.io/actions/actions-runner:latest\",\"name\":\"runner\"}],\"initContainers\":[{\"command\":[\"sudo\",\"chown\",\"-R\",\"1001:123\",\"/home/runner/_work\"],\"image\":\"ghcr.io/actions/actions-runner:latest\",\"name\":\"kube-init\",\"volumeMounts\":[{\"mountPath\":\"/home/runner/_work\",\"name\":\"work\"}]}],\"volumes\":[{\"ephemeral\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}}}}},\"name\":\"work\"}]}}}",
                "version": "0.9.3"
              }
            ],
            "name": "gha-runner-scale-set-dind",
            "namespace": "actions-runner-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "oci://ghcr.io/actions/actions-runner-controller-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "githubConfigSecret: github-secret\ngithubConfigUrl: \"https://github.com/goxygit/kurwa.git\"\nminRunners: 0\nrunnerScaleSetName: \"local-runner\"\ncontainerMode:\n  type: \"dind\"\n\n  \ntemplate:\n  spec:\n    initContainers:\n    - name: kube-init\n      image: ghcr.io/actions/actions-runner:latest\n      command: [\"sudo\", \"chown\", \"-R\", \"1001:123\", \"/home/runner/_work\"]\n      volumeMounts:\n        - name: work\n          mountPath: /home/runner/_work \n    containers:\n      - name: runner\n        image: ghcr.io/actions/actions-runner:latest\n        command: [\"/home/runner/run.sh\"]\n        env:\n        - name: RUNNER_EKS\n          value: \"true\"\n    volumes:\n      - name: work\n        ephemeral:\n          volumeClaimTemplate:\n            spec:\n              accessModes: [ \"ReadWriteOnce\" ]\n              resources:\n                requests:\n                  storage: 1Gi\n"
            ],
            "verify": false,
            "version": "0.9.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
